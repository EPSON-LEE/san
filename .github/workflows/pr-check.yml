name: PR Check

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.11.0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Check commit messages
      run: |
        echo "Checking commit messages..."
        # 可以添加 commitlint 检查
        # npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}
        
    - name: Check for breaking changes
      run: |
        echo "Checking for breaking changes..."
        # 可以添加 API 兼容性检查
        
    - name: Run type checking
      run: |
       run: cd apps/admin && npx tsc --noEmit
        cd ../server && npx tsc --noEmit
        
    - name: Check code formatting
      run: |
        cd apps/server
        pnpm run format --check || (echo "Code is not formatted. Please run 'pnpm run format'" && exit 1)
        
    - name: Run quick tests
      run: |
        cd apps/server
        pnpm run test --passWithNoTests
        
    - name: Check bundle size
      run: |
          cd apps/admin
          pnpm run build
        # 可以添加 bundle size 检查
        echo "Bundle size check completed"
        
    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('PR Check Results')
          );
          
          const body = `## PR Check Results
          
          ✅ Code formatting check passed
          ✅ Type checking passed  
          ✅ Quick tests passed
          ✅ Bundle size check completed
          
          Your PR is ready for review! 🚀`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }